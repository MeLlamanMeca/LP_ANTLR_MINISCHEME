(define x 5)
(define y 6)
(define (suma x y) (+ x y))
(define (resta x y) (- x y))



(define (main)
    (newline)
    (newline)
    (newline)
    (display x)
    (display y)
    (define x_copy x)
    (display x_copy)
    (newline)
    (newline)
    (newline)
    (set! x 6)
    (set! y 5)
    (display x)
    (display y)
    (display x_copy)
    (newline)
    (newline)
    (newline)
    (display 5)
    (newline)
    (display #t)
    (newline)
    (display #f)
    (newline)
    (display "this is a string")
    (newline)
    (display (car "this is a string"))
    (newline)
    (display (cdr "this is a string"))
    (newline)
    (define string "this_is_another_string")
    (display string)
    (newline)
    (display (car string))
    (newline)
    (display (cdr string))
    (newline)
    (set! x '(1 2 3 4))
    (set! y '(x x x))
    (display x)
    (newline)
    (display y)
    (newline)
    (display (suma 5 5))
    (newline)
    (display (resta 5 5))
)